import torch
import torch.nn as nn
import torch.optim as optim
import pandas as pd
# from sklearn.model_selection import train_test_split
# from sklearn.preprocessing import LabelEncoder, StandardScaler
import datetime
import json

# df = pd.read_csv('/Users/manav/Desktop/cmpsc-497-fall-2023-final-project-ai-policing/implementation/crime_data_raw_2022C.csv')

# def get_week_of_year_from_string(timestamp_str):
#     timestamp_format = "%m/%d/%Y %I:%M:%S %p"
#     try:
#         datetime_obj = datetime.datetime.strptime(timestamp_str, timestamp_format)
#         week_number = datetime_obj.strftime("%U")
#         return int(week_number)
#     except ValueError:
#         return None

# # df = pd.read_csv('/Users/manav/Desktop/cmpsc-497-fall-2023-final-project-ai-policing/implementation/crime_data_raw_2022C.csv')


# # x_to_name = {}
# # name_to_x = {}
# # # Iterate over DataFrame rows to create the mappings
# # for index, row in df.iterrows():
# #     x_to_name[row['IUCR']] = row['Primary Type']
# #     name_to_x[row['Primary Type']] = row['IUCR']
# # df['week_no'] = df['Date'].apply(get_week_of_year_from_string)
# # df = df.drop(columns=['Zip Codes', 'Date', 'Block', 'Primary Type', 'Beat','Location'])


# # df.to_csv('cleaned_dataset.csv', index=False)

# df = pd.read_csv('/Users/manav/Desktop/cmpsc-497-fall-2023-final-project-ai-policing/cleaned_dataset.csv')

# label_encoder = LabelEncoder()
# df['crime_code'] = label_encoder.fit_transform(df['IUCR'])
# df['District'] = label_encoder.fit_transform(df['District'])
# df['Ward'] = label_encoder.fit_transform(df['Ward'])
# df['FBI Code'] = label_encoder.fit_transform(df['FBI Code'])
# df['Community Area'] = label_encoder.fit_transform(df['Community Area'])
# scaler = StandardScaler()
# df[['week_no']] = scaler.fit_transform(df[['week_no']])

# df['Arrest'] = df['Arrest'].astype(int)

# features = df[['week_no', 'crime_code', 'Arrest', 'District', 'Ward', 'FBI Code']]
# target = df['Community Area']

# X_train, X_test, y_train, y_test = train_test_split(features, target, test_size=0.2, random_state=12)

# class CrimeRiskNN(nn.Module):
#     def __init__(self, input_size, output_size):
#         super(CrimeRiskNN, self).__init__()
#         self.layer1 = nn.Linear(input_size, 128)
#         self.layer2 = nn.Linear(128, 64)
#         self.output_layer = nn.Linear(64, output_size)

#     def forward(self, x):
#         x = torch.relu(self.layer1(x))
#         x = torch.relu(self.layer2(x))
#         x = self.output_layer(x)
#         return x
    
# input_size = features.shape[1]
# unique_community_areas = df['Community Area'].nunique()
# model = CrimeRiskNN(input_size, unique_community_areas)

# criterion = nn.MSELoss()
# optimizer = optim.Adam(model.parameters(), lr=0.001)


# # Training the model
# num_epochs = 100
# for epoch in range(num_epochs):
#     # Convert features and targets to tensors
#     inputs = torch.tensor(X_train.values, dtype=torch.float32)
#     targets = torch.tensor(y_train.values, dtype=torch.float32)

#     # Forward pass
#     outputs = model(inputs)
#     loss = criterion(outputs, targets.view(-1,1))

#     # Backward and optimize
#     optimizer.zero_grad()
#     loss.backward()
#     optimizer.step()

#     if (epoch+1) % 10 == 0:
#         print(f'Epoch [{epoch+1}/{num_epochs}], Loss: {loss.item():.4f}')

# crime_label_encoder = LabelEncoder()
# # Prediction function
# def predict_top_community_area(week_no, original_crime_code):
#     # Convert original crime code to encoded value
#     encoded_crime_code = crime_label_encoder.transform([original_crime_code])[0]
    
#     # Prepare and normalize input data
#     input_data = pd.DataFrame([[week_no, encoded_crime_code, 0, 0, 0, 0]], 
#                               columns=['week_no', 'crime_code', 'Arrest', 'District', 'Ward', 'FBI Code'])
#     input_data['week_no'] = scaler.transform(input_data[['week_no']])
    
#     # Convert to tensor
#     input_tensor = torch.tensor(input_data.values, dtype=torch.float32)

#     # Get predictions
#     prediction = model(input_tensor)
#     top_community_area = prediction.argmax()
#     return top_community_area
# # Example usage
# top_community_area = predict_top_community_area(week_no=25, crime_code='1565')
# print(f'Top Community Area: {top_community_area}')









# df = pd.read_csv('./CommAreas.csv')

# ans = []

# for index, row in df.iterrows():
#   ans.append([row['AREA_NUMBE'], row['the_geom']])

# Raw data in WKT format
# df = pd.read_csv('./CommAreas.csv')

# ans = {}
# for index,row in df.iterrows():
#   id = int(row['AREA_NUMBE'])
#   raw_data = row['the_geom'].replace('MULTIPOLYGON','').replace(')', '').replace('(','')
#   raw_data = raw_data.split(',')
#   temp = []
#   for i in raw_data:
#       lon, lat = i.split()
#       lon, lat = float(lon), float(lat)
#       temp.append([lat, lon])
#   ans[id] = {"coordinates": temp}


# with open('mockData.js','w') as file:
#    file.write(str(ans))


raw_data ="-87.80675853375328 42.00083736081486, -87.80676435719879 42.00051917005114, -87.80676595037635 42.00037952551129, -87.80676800664882 42.00019696332003, -87.8067701007941 42.00001440157105, -87.8067707003652 41.99996050886106, -87.80677237237433 41.99981027124912, -87.80677409503944 41.99950493217211, -87.8067747646892 41.99938622158884, -87.80677623115128 41.99922016931313, -87.80677718764412 41.999101247913366, -87.80677811033236 41.99899378941352, -87.8067818349592 41.998638515646576, -87.80678202537743 41.99862037106865, -87.80678281029236 41.99854546413766, -87.80678965922554 41.9980168260405, -87.80679190386074 41.99777064344846, -87.80679465101208 41.99746929929933, -87.80679637382674 41.99735402347682, -87.80679845112422 41.997218058030256, -87.80680098993857 41.996978439775795, -87.80680425449555 41.996670233073566, -87.80680494066723 41.99638615688213, -87.80680531090026 41.996234130025805, -87.80680802487596 41.99609232233151, -87.806808763003 41.99604347652556, -87.80681282145072 41.99577492844757, -87.80681611726688 41.995556856657565, -87.80681811925888 41.995391939806574, -87.80723991417817 41.995395190578684, -87.80735109101414 41.99539653290463, -87.80742151498126 41.995397382997794, -87.80792864963487 41.995403504031316, -87.80822149740187 41.99540536539909, -87.80851324139284 41.995407248415454, -87.80886461458739 41.99540948546425, -87.80935860407907 41.99541267435607, -87.8100212173078 41.9954169589803, -87.81033339892254 41.99541965143872, -87.81033007028795 41.99561619606108, -87.81032862848879 41.995747362166114, -87.81032736315476 41.99586596064477, -87.81032581821226 41.99600972214315, -87.81032198361383 41.996314420414976, -87.81031907945652 41.99654519449623, -87.81035351296183 41.99712427334803, -87.81093528001747 41.997125028262126, -87.81111907365997 41.99712056245252, -87.81154741364666 41.99710969483926, -87.81208934297207 41.99709593865489, -87.81216179425745 41.99709406072859, -87.81290054692829 41.997074911023844, -87.81306778455253 41.997070575317984, -87.81357746025911 41.99705691482187, -87.81400755959207 41.99704538573911, -87.81463456009715 41.99702936766298, -87.81553862983024 41.997006596375485, -87.81576172192 41.99700097603664, -87.81669395588278 41.996976928577226, -87.81717004502534 41.99696464484876, -87.81770976969435 41.99695022104755, -87.81830490897369 41.996934314497835, -87.81901063696228 41.99691764081134, -87.81940806300311 41.996908249125035, -87.81979328445752 41.996897350332965, -87.82002528684559 41.99689078600509, -87.82056762093266 41.99687652316385, -87.8208609941829 41.996868806751216, -87.82110958228353 41.99686283622025, -87.82136021777437 41.99685271243123, -87.82141432292038 41.996850529499575, -87.82141401177127 41.99685276902421, -87.8214044459753 41.99692164251089, -87.82140574021372 41.997338519952706, -87.82140495945107 41.997407111264934, -87.82140312907585 41.99756792297538, -87.82140064098219 41.997786514673024, -87.82139786938528 41.998256161028905, -87.821397866734 41.998256583623494, -87.82139723072906 41.99836352161325, -87.82139688368667 41.998420544762375, -87.82139586770602 41.99861156353527, -87.82139582140182 41.99862193063179, -87.82139563617149 41.99866340066417, -87.8213947865998 41.99883370175665, -87.8213944058757 41.99888120211225, -87.82139364794385 41.99897576376638, -87.82139282565859 41.999092031730946, -87.82139276219873 41.99910095886989, -87.82139029529012 41.99944912280196, -87.8213889131741 41.999584789732026, -87.8213874768686 41.999727262025225, -87.82138595046581 41.99987642947863, -87.82138594320725 41.999877335031194, -87.82138456940149 42.00000989638081, -87.8213844792624 42.00001857148208, -87.82138447727839 42.00001881899977, -87.82138252714356 42.000161180045986, -87.82138032052967 42.00031717750376, -87.82138083330334 42.00048273716325, -87.82138102373716 42.00054604607485, -87.8213744400923 42.000610121963454, -87.82137387724534 42.000625262203144, -87.82137387722553 42.00062526467283, -87.82137387720353 42.00062526741694, -87.8213692998142 42.00074729705477, -87.8213661107121 42.00083230955784, -87.82136563173034 42.00086452428557, -87.82136618236062 42.000924294786344, -87.82136702290602 42.00101669589531, -87.82136750760178 42.00107106085727, -87.82136530929482 42.00111586350135, -87.82136426727402 42.001176917491755, -87.82136309851364 42.00124469419662, -87.82136126333731 42.001386423187654, -87.82136034593788 42.00145740129241, -87.82135932829736 42.00153611044681, -87.82135860201045 42.001617484690485, -87.82135860188286 42.001617500606265, -87.82135789434622 42.00169208387097, -87.82135731301948 42.001759918347986, -87.82135725014051 42.001841283198466, -87.82135721508573 42.001867225845665, -87.82135719851046 42.00187975714169, -87.82135713329956 42.00195673154131, -87.82135686383292 42.00200420465084, -87.82135621121081 42.00213136804178, -87.82135586949424 42.002192396605125, -87.82135407722244 42.0022966408761, -87.82135350483306 42.0023313255038, -87.8213514490987 42.002450166893894, -87.82135092437022 42.00252475233521, -87.82135038189577 42.00260614028243, -87.82135038188038 42.00260614220329, -87.82134989328802 42.00268094651612, -87.82134980498986 42.002687279450804, -87.82134971358771 42.00269381599093, -87.82134911154748 42.002737062647896, -87.82134859401384 42.00277481635119, -87.82134849124573 42.002782311662365, -87.82134663011769 42.00291808559583, -87.82134588699064 42.00300628099088, -87.82134539771542 42.00306730971002, -87.82134433457684 42.00317688013235, -87.8213438229698 42.00323151559873, -87.82134297972816 42.003318337896026, -87.82134217967557 42.003399726878484, -87.8213416347248 42.00345397745786, -87.8213403265035 42.00358961718054, -87.82134003687554 42.00361656415743, -87.82133965632191 42.003655311041214, -87.82133963512113 42.003657450595405, -87.82133883579156 42.00373883957627, -87.82133818200087 42.00380661854756, -87.82133770739777 42.00386122563336, -87.82133757126775 42.003924094529005, -87.82133968107122 42.00397964946003, -87.82134172868342 42.0040335543032, -87.82134504495944 42.00412085918402, -87.82134349510363 42.004253593906554, -87.82134105107306 42.00446293212155, -87.82134005938306 42.00454605456397, -87.82133835708757 42.004688712427004, -87.82133799530288 42.004719977066806, -87.82133799286635 42.00472018918216, -87.82133796240366 42.004722795482145, -87.82133668326144 42.00483332482867, -87.82133400192524 42.00505756787829, -87.8213315243238 42.00526562135681, -87.82133132135932 42.005281757410756, -87.82133112581214 42.00529701425794, -87.8213307997161 42.00532846126807, -87.82132286457882 42.00600166775872, -87.82132228671415 42.00605070063106, -87.82132195369738 42.00607892537389, -87.82132090410333 42.00616797554181, -87.8213204268899 42.00620913576996, -87.82131912835129 42.00631615407987, -87.82131660109772 42.006530244791286, -87.82131537422481 42.00663731692663, -87.8213149723252 42.00666931297882, -87.82131290553895 42.006844328691585, -87.82131160205282 42.00695173005691, -87.82131037441668 42.007059077972364, -87.82130906989164 42.007166699138885, -87.82130835065593 42.00722876958142, -87.8213130620195 42.00735180015363, -87.82131343779288 42.007361606283055, -87.82131802561663 42.007481415990604, -87.82131128698363 42.00779161036722, -87.82129854608034 42.0083780953837, -87.82129854606053 42.00837809785338, -87.82129854603852 42.00837810059747, -87.82129854598571 42.0083781071833, -87.82129854555616 42.00837811486514, -87.82129854548354 42.008378123920636, -87.82129854539332 42.008378135171434, -87.82129854491976 42.00837814834144, -87.8212985443982 42.00837821337649, -87.82129735910829 42.008443520148695, -87.82129551195266 42.00854543122253, -87.82129404817401 42.008626927212184, -87.8212922700023 42.00872477691111, -87.82129064533534 42.008817248950315, -87.82128856213188 42.00895313234074, -87.82128724617081 42.00903468359333, -87.82128581252353 42.00912164092746, -87.82128313763535 42.00927165426122, -87.82128300551257 42.00927895267436, -87.82128200691065 42.00931629640154, -87.82128065214968 42.009365933343986, -87.82127671629576 42.00951259258305, -87.82127401267891 42.009614384835366, -87.82127397469681 42.009615817408594, -87.82127069312195 42.00974058118195, -87.82126874534022 42.009827453337046, -87.8212680137014 42.009909501412594, -87.82126718855388 42.010039956340194, -87.8212659904449 42.01014346191186, -87.82126580622239 42.01015720976547, -87.82126489466188 42.01022498723643, -87.82126314270103 42.010360844354445, -87.82126163907166 42.010474913695276, -87.8212600846304 42.01059990496415, -87.8212586101971 42.01071946171589, -87.82125713631778 42.01089867938558, -87.82125635167841 42.01099650548674, -87.82125587208063 42.01105629982663, -87.821253461326 42.01135686034666, -87.82107302058444 42.011360336178925, -87.82102856380439 42.01136112540869, -87.82094951418682 42.01136252940954, -87.82088623657633 42.011363663488275, -87.82081838929165 42.01136487976186, -87.82072395358522 42.0113669281244, -87.82057821293328 42.01137031115694, -87.82040391191298 42.01137438964326, -87.82022888468022 42.01137739383529, -87.820052991768 42.011378090140944, -87.82004244683056 42.01137834183057, -87.81998821759635 42.01137963854037, -87.81998304858236 42.01137975729847, -87.81998103986393 42.01137980319894, -87.81972901246584 42.011385586505405, -87.81972901240846 42.01138559364005, -87.8197290123908 42.01138559583532, -87.81973235483208 42.01147764217999, -87.81973196576789 42.01157622632739, -87.81973196574802 42.011576228797075, -87.81973196572815 42.011576231266766, -87.8197319641226 42.01157661379981, -87.81973100638852 42.011819341990865, -87.81973079895393 42.01186319350841, -87.81973052816637 42.01193344413307, -87.8197374883637 42.0119332955309, -87.8197374979327 42.011933295299286, -87.82009826553744 42.01192559321598, -87.82009811657326 42.011946136935215, -87.82009811655561 42.01194613913049, -87.8200975930489 42.0120183987453, -87.8200974598021 42.01203497333681, -87.82009614809141 42.01219813650968, -87.82009537831075 42.01229388858603, -87.82009512006404 42.01232601147696, -87.82009469075788 42.012379412057605, -87.82009401658414 42.01246327096166, -87.82009298713162 42.012600475615855, -87.82009200099739 42.012723137073856, -87.8200918836365 42.01273773509391, -87.82009164801437 42.012767043092865, -87.82009138990489 42.01279914814453, -87.8200913878863 42.012799399228925, -87.82009078056832 42.012874940510066, -87.82008975101793 42.01301220031218, -87.82008895813375 42.01311082214591, -87.82008823539071 42.01320071913848, -87.82008750117886 42.01329204223404, -87.82008622018434 42.013423867130896, -87.82008541101378 42.0135611279053, -87.82008481797543 42.013634890181784, -87.82008446498061 42.01367879564496, -87.82008430789988 42.013698333301534, -87.8200829835645 42.0138355917659, -87.82008180685038 42.013972795728826, -87.8200814136976 42.01402169516106, -87.8200808452161 42.01411029674824, -87.82008025104648 42.01420291681078, -87.82007989451586 42.01424726077533, -87.82007886526075 42.01438452027155, -87.82007776209873 42.01452172592231, -87.82007757589454 42.01454488495292, -87.82007722287908 42.01458879095787, -87.82007687031512 42.0146326407086, -87.8200768690509 42.014632797945, -87.82007686838678 42.014632880542145, -87.8200766584988 42.01465898507955, -87.8200756270868 42.01479618967248, -87.82007403198472 42.01493059376604, -87.82007381302 42.01502180882154, -87.82007369944826 42.01503007573325, -87.82007257490778 42.015111812149634, -87.82007164821803 42.01522706478295, -87.82007162879955 42.015229479857176, -87.82007120870357 42.015281727069215, -87.8200700988844 42.015419754279, -87.82006986615292 42.015457897743296, -87.82006951356655 42.01550174831055, -87.82006889372856 42.01556963732858, -87.8200916387242 42.0155691344854, -87.82013028480229 42.015568319643, -87.82020212849697 42.015566829939786, -87.82031246931479 42.01556446864059, -87.82042288555377 42.0155621083956, -87.82052800089036 42.01555988819087, -87.82054640287936 42.01555947699482, -87.82065987977907 42.01555646061256, -87.82077092448085 42.0155535089971, -87.8210367430547 42.01554640876506, -87.82104543678005 42.01554617945801, -87.8210455015591 42.015546177826174, -87.82104551076289 42.01554617731843, -87.82123064074764 42.01554129109584, -87.82123052098282 42.01555621977429, -87.8212301617789 42.015610168383176, -87.82123005346341 42.0156236698597, -87.82122953831092 42.01570604757208, -87.82122920677374 42.01574737330732, -87.82122895102383 42.015788426059125, -87.82122843733839 42.0158708037757, -87.82122832681785 42.015884579935104, -87.82122810711945 42.01591196486428, -87.82122785041423 42.01595318226202, -87.8212273732707 42.016021784859205, -87.82122733708971 42.01603556025224, -87.82122716097047 42.01605751297858, -87.82122674979253 42.016117938734524, -87.82122649360791 42.016159044993444, -87.82122616250159 42.01620031611798, -87.82122605997455 42.01622226944643, -87.82122564916314 42.01628269492786, -87.82122554041483 42.016296249912564, -87.82122514956014 42.016354095944735, -87.82122506149918 42.016365072307295, -87.82122466044062 42.01643345542949, -87.82122454816246 42.016447450291565, -87.8212243275687 42.016474946079306, -87.8212239607803 42.01652988365135, -87.82122370686568 42.01657066034036, -87.82122357924048 42.016595741656175, -87.82122344670718 42.01661226108112, -87.82122285939009 42.01669463982949, -87.82122275327269 42.01670786661999, -87.82122266916492 42.016727569519524, -87.82122234420596 42.016777017526366, -87.82122187254426 42.01684507184931, -87.8212217576198 42.01685939627562, -87.82122124353695 42.01694177370064, -87.82122091858042 42.01698227674861, -87.8212209128607 42.01698298966327, -87.82122065657775 42.017024152445856, -87.82121991073 42.017135508288284, -87.82121930813189 42.017228917226426, -87.82121875205603 42.01731661900756, -87.82121795833562 42.01744306766664, -87.82121761237246 42.017495315468956, -87.82121711346907 42.017566717022696, -87.82121646636821 42.01767489003683, -87.82121634263473 42.01769031182265, -87.82121558456473 42.01781231504773, -87.82121491096204 42.01792383584851, -87.82121470312251 42.01794974005697, -87.82121417623138 42.01803370986156, -87.82121382049505 42.0180872202158, -87.82121329529103 42.0181710251002, -87.82121293830559 42.01822464494071, -87.82121241353563 42.01830839521569, -87.82121194631605 42.01837584527016, -87.82121086909493 42.01854674848388, -87.82120976747744 42.01864249102529, -87.82120248381325 42.018642455784104, -87.82085070564466 42.018651384169814, -87.82080985156578 42.018652421277395, -87.82062677515161 42.01865607643211, -87.82046633690817 42.0186592841573, -87.81895428960723 42.01869357075841, -87.81884550449676 42.018696150117975, -87.8187654426238 42.01869804860588, -87.8187654301098 42.01869804882418, -87.81859942696357 42.018701996816255, -87.81771135127487 42.0187205958863, -87.81769572164885 42.018721098936545, -87.81754456370071 42.018725966080815, -87.81740501559707 42.018730470014305, -87.81649560563959 42.0187477288983, -87.81632744828742 42.01874949599625, -87.81632744387373 42.01874949570198, -87.81632744129777 42.01874949569038, -87.81619962862301 42.01875084168825, -87.81536212814807 42.01876786642636, -87.81528332435484 42.01876948633417, -87.81527342176872 42.01876974459936, -87.81510307356363 42.018774188221414, -87.81510306399134 42.01877418872703, -87.81495981507959 42.01877790488073, -87.81403617309783 42.01879818093478, -87.81388092038307 42.01880153957423, -87.81372463704656 42.0188049210545, -87.81281343494746 42.01882499660342, -87.8126580472639 42.018828599404564, -87.8126580325419 42.0188285996122, -87.81249387095455 42.01883241046589, -87.8116119755836 42.01885071568864, -87.81143669190214 42.01885543384511, -87.81143667570593 42.018855434320294, -87.81143667312998 42.01885543430858, -87.81130690424843 42.01885893304796, -87.81038952610594 42.01887794509138, -87.81037492271037 42.018878319275736, -87.81021395003918 42.01888244188538, -87.81021393862913 42.01888244210779, -87.81007811882564 42.018885898708994, -87.81006579609681 42.01888621245058, -87.80921510902135 42.018904284501176, -87.80899098354884 42.01890979234209, -87.80885203286093 42.01891321892044, -87.80795838960456 42.018932293086266, -87.80776803930311 42.0189388309901, -87.8075704364901 42.01894560950304, -87.80757041587566 42.01894561023188, -87.80729843807282 42.01895495587213, -87.80703737911922 42.01895857304644, -87.80678055528792 42.01896213166876, -87.8065472350199 42.018964572579776, -87.80654721882364 42.018964573054284, -87.80655028648509 42.018806156711285, -87.80655048898964 42.01879571079508, -87.80655165677899 42.01871833694023, -87.80655479404055 42.018510417420075, -87.80655981585505 42.01817831148471, -87.80655981890331 42.01817803131717, -87.80656360628288 42.017821634186916, -87.80656360646631 42.017821611959846, -87.80656696232039 42.017504207733595, -87.80656802902534 42.01743644436583, -87.80657067329948 42.017268443882415, -87.80657153560071 42.01715066730004, -87.80657226355109 42.017049080807084, -87.80657264798542 42.017011460030076, -87.80657662650896 42.01663865345981, -87.80657784258631 42.01652469181178, -87.80659244095112 42.0155048540354, -87.80659338556161 42.01533677681632, -87.80659338567483 42.015336763095895, -87.80659399397199 42.01522736907922, -87.80659403747524 42.01522432679681, -87.80660704047472 42.01430623188594, -87.80661511341813 42.01367568139339, -87.80660887465675 42.01352650963373, -87.80660887467033 42.013526507987294, -87.8066088746839 42.01352650634083, -87.8066050342381 42.01343453037713, -87.80661754597942 42.013264942536324, -87.80662691743028 42.01258395994994, -87.80662970647599 42.012401742613434, -87.806631788578 42.01226573858005, -87.80663237722045 42.01222556606289, -87.80663826128577 42.011713060918076, -87.80663826130615 42.01171305844839, -87.80663826132653 42.01171305597872, -87.80664097147093 42.01147817037618, -87.80664128065928 42.011333690437056, -87.80664186595621 42.0111467314154, -87.8066473638278 42.01081481960322, -87.80664976258002 42.01067128225996, -87.80665235303556 42.01046427155762, -87.80665235503007 42.010464118989766, -87.80665406466112 42.0103192763571, -87.80665603150082 42.01014316347079, -87.8066568611311 42.01002925562729, -87.80665769103497 42.00991540321546, -87.80665774480083 42.00990888545908, -87.8066578254926 42.009899103610735, -87.8066592085557 42.009745670420955, -87.80665933676994 42.00973146570276, -87.80666084755045 42.00956388651332, -87.80666288133804 42.00933522209451, -87.80666289139411 42.00933453828813, -87.80666499738385 42.0091902567117, -87.80666882770026 42.00900237920936, -87.80667069091612 42.00891032012608, -87.80667100522606 42.00879638300065, -87.8066715423501 42.008584149942635, -87.80667167860929 42.008545237652264, -87.80667207777104 42.0084344838972, -87.80667395039707 42.00828792903635, -87.80667643534379 42.0080934559775, -87.80667927501524 42.00786962442694, -87.80668147493162 42.00768324952976, -87.8066820129843 42.0076358597968, -87.80668278260052 42.007569316937555, -87.80668446689987 42.00741694706994, -87.8066869832374 42.00718934787955, -87.80668822005767 42.00707958530196, -87.8066908714513 42.0068651388102, -87.80669249549204 42.00675299137847, -87.80669326840595 42.006699428281564, -87.8066959109908 42.00651294506056, -87.80669601168738 42.00650073578518, -87.8066975221604 42.00631759280937, -87.80669962086023 42.00606749723408, -87.8067011979425 42.005943192521194, -87.80670130087933 42.005934949437226, -87.80670238994266 42.00584764463484, -87.80670407038913 42.00571535533784, -87.80670414249202 42.005709824747136, -87.80670809662567 42.005405608991765, -87.80670849166785 42.00537992542823, -87.80670867195592 42.00536627334424, -87.80671044915066 42.0052318848975, -87.80671182192039 42.00509223946158, -87.80671285505582 42.00498480902271, -87.8067140503977 42.00486667642186, -87.80671601807201 42.004670371045094, -87.80671798663003 42.004474000902654, -87.80671952368996 42.004318933283315, -87.80672200933104 42.004093317332284, -87.80672390463076 42.003921484594514, -87.8067260146256 42.00372816552154, -87.8067290894293 42.00344898585123, -87.80672908944514 42.00344898393037, -87.80673085853459 42.003287854324576, -87.8067331825154 42.003072994559346, -87.8067351145169 42.00290116195932, -87.80673780478118 42.00266418565056, -87.80673965197796 42.002502588770184, -87.80674095578273 42.00235339260443, -87.80674095543068 42.002353390681854, -87.80674246025795 42.00222447777905, -87.80674446695767 42.00205259006345, -87.80674613250267 42.001912973060605, -87.80674914212487 42.00165514284132, -87.80675104882876 42.00151300172654, -87.80675514461035 42.001143287118005, -87.80675519039535 42.00113916197905, -87.80675519327373 42.001138902116935, -87.8067551942163 42.001138832418704, -87.80675519706755 42.0011385758495, -87.80675835825984 42.00085320197647, -87.80675853375328 42.00083736081486" 



ans = {}
df = pd.read_csv('CommAreas.csv')
for i, row in df.iterrows():
    raw_data = row['the_geom'].replace('MULTIPOLYGON','').replace('(','').replace(')','')
    raw_data = raw_data.split(',')
    temp = []
    for i in raw_data:
        lon, lat = i.split()
        lon, lat = float(lon), float(lat)
        temp.append([lat, lon])
    ans[row['AREA_NUMBE']] = temp



with open('data.js', 'w') as file:
    file.write("const data = ")
    file.write(json.dumps(ans, indent=4))
    file.write('\nexport default data;')
